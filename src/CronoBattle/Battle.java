/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package CronoBattle;

import Controlador.Dado;
import Controlador.Musica;
import Controlador.Principal;
import Controlador.Sprite;
import Controlador.Texto;
import Inimigos.Inimigos;
import Personagens.Elfo;
import armas.Arma;
import com.sun.awt.AWTUtilities;
import consumiveis.Consumiveis;
import java.awt.Color;
import java.awt.Font;
import java.awt.image.BufferedImage;
import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;

/**
 *
 * @author lucas
 */
public class Battle extends javax.swing.JFrame {

    /**
     * Creates new form Battle1
     */
    public Crono crono;
    public Inimigos inimigo;
    public boolean turno=true;
    public BufferedImage img;
    public Sprite sImg;
    public Musica musica;
    public Texto text;
    public Texto dano, danoInimigo;
    public boolean acabou = false;
    public int invencivel=0;
    
    public Battle() {
        initComponents();
        crono = new Crono();
        crono.rodar();
        text = new Texto("", new Font("Calibri", Font.PLAIN , 30), Color.WHITE,135,50);
        dano = new Texto("", new Font("Calibri", Font.PLAIN , 100), Color.RED,50,320);
        danoInimigo = new Texto("", new Font("Calibri", Font.PLAIN , 100), Color.RED,630,320);
        
        //setUndecorated(true);
        AWTUtilities.setWindowOpacity(this, 0.9F);
        getContentPane().setBackground(Color.getHSBColor(50, 85, (float) 86.85));
        this.setLocationRelativeTo(null);
        try {
            img = ImageIO.read(getClass().getResourceAsStream("/Controlador/Imagens/batalha.png"));
        } catch (IOException ex) {
            Logger.getLogger(Battle.class.getName()).log(Level.SEVERE, null, ex);
        }
        sImg = new Controlador.Sprite(img,0, 0);
        
        musica = new Musica(getClass().getResourceAsStream("/CronoBattle/batalha.mp3"));
        
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButtonAtacar = new javax.swing.JButton();
        jButtonCorrer = new javax.swing.JButton();
        jButtonItem = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Batalha");
        setAlwaysOnTop(true);
        setUndecorated(true);

        jButtonAtacar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Controlador/Imagens/atacar.png"))); // NOI18N
        jButtonAtacar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAtacarActionPerformed(evt);
            }
        });

        jButtonCorrer.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Controlador/Imagens/correr.png"))); // NOI18N
        jButtonCorrer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCorrerActionPerformed(evt);
            }
        });

        jButtonItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Controlador/Imagens/item.png"))); // NOI18N
        jButtonItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonItemActionPerformed(evt);
            }
        });

        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("X");

        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("jLabel9");
        jLabel9.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jPanel3.setBackground(new java.awt.Color(102, 255, 102));

        jLabel1.setText("jLabel1");

        jLabel3.setText("jLabel3");

        jLabel2.setText("jLabel2");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2))
                .addContainerGap(56, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel10)
                .addGap(19, 19, 19)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jPanel1.setBackground(new java.awt.Color(255, 51, 51));

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("jLabel5");

        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel7.setText("jLabel7");

        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setText("jLabel6");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel12)
                    .addComponent(jLabel5)
                    .addComponent(jLabel7)
                    .addComponent(jLabel6))
                .addContainerGap(56, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel12)
                .addGap(18, 18, 18)
                .addComponent(jLabel5)
                .addGap(18, 18, 18)
                .addComponent(jLabel6)
                .addGap(18, 18, 18)
                .addComponent(jLabel7)
                .addContainerGap(20, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(153, 153, 255));

        jLabel8.setText("Nenhuma arma");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jLabel8))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addGap(18, 18, 18)
                .addComponent(jLabel8)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, 94, Short.MAX_VALUE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButtonAtacar, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonCorrer)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonItem, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(jLabel11))
                    .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 10, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButtonAtacar, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonCorrer, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonItem))))
                .addContainerGap(53, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void mostrar(Inimigos inimigos)
    {
        
        Principal.GUI.remove(Principal.hud.t);
        Principal.GUI.remove(text);
        Principal.GUI.remove(dano);
        Principal.GUI.remove(danoInimigo);
        
        text = new Texto("", new Font("Calibri", Font.PLAIN , 30), Color.WHITE,135,50);
        dano = new Texto("", new Font("Calibri", Font.PLAIN , 100), Color.RED,50,320);
        danoInimigo = new Texto("", new Font("Calibri", Font.PLAIN , 100), Color.RED,630,320);
        
        musica = new Musica(getClass().getResourceAsStream("/CronoBattle/batalha.mp3"));
        turno= true;
        acabou=false;
        
        Principal.pausa();
        Principal.pararMusica();
        Principal.GUI.add(sImg);
        this.inimigo = inimigos;
        status(0);
        
        new Thread(){
            public void run(){
                musica.play();
            }
                    
        }.start();
        
        setVisible(true);
        jLabel1.setText(Controlador.Principal.nome + " - " + Controlador.Principal.person.getClass().getSimpleName());
        jLabel2.setText("HP: "+Controlador.Principal.person.hp);
        jLabel3.setText("CP: "+ Controlador.Principal.person.cp);
        jLabel5.setText(inimigos.getClass().getSimpleName());
        jLabel6.setText("HP: "+ inimigos.hp);
        jLabel7.setText("CP: "+ inimigos.cp);
        
        ImageIcon eff = new ImageIcon(Controlador.Principal.person.img);
        jLabel10.setIcon(eff);
        eff = new ImageIcon(inimigos.img);
        jLabel12.setIcon(eff);
        
        if (Principal.person.arma!=null){
            eff = new ImageIcon(Principal.person.arma.img);
            jLabel4.setIcon(eff);
            jLabel8.setText(Principal.person.arma.nome);
            if (Principal.person.arma.nome.equals("Tunica"))
                invencivel=3;
            else
                invencivel=0;
        }
        else
            jLabel8.setText("Nenhuma Arma");

            
    }
    
    private void jButtonItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonItemActionPerformed
        if (turno==true){
            Opcao a = new Opcao(this);
            a.setVisible(true);
        }
    }//GEN-LAST:event_jButtonItemActionPerformed

    private void jButtonAtacarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAtacarActionPerformed
        if (turno==true){
            inimigo.hp -= Principal.person.cp;
            if (Principal.person.arma!=null)
            inimigo.hp -= Principal.person.arma.dano;
            jLabel6.setText("HP: "+ inimigo.hp);
            turno = false;
            status(1);
            if(inimigo.hp > 0){
                new Thread(){
                    public void run(){
                        try {
                            Thread.sleep(1500);
                            status(3);
                            int t = Principal.aleatorio.nextInt(600);
                            Thread.sleep(1300+t);
                            atacaInimigo();
                        } catch (InterruptedException ex) {
                            Logger.getLogger(Battle.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }
                }.start();
            }
            else
            {
                acabou=true;
                fimBatalha(true);
                
            }
        }
    }//GEN-LAST:event_jButtonAtacarActionPerformed

    private void jButtonCorrerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCorrerActionPerformed
        if (Principal.person.hp>30 && turno==true){
            Principal.person.hp-=10;
            setVisible(false);
            acabou=true;
            Principal.GUI.remove(dano);
            Principal.GUI.remove(danoInimigo);
            Principal.retoma();
            Principal.GUI.remove(text);
            Principal.GUI.remove(sImg);
            musica.player.close();
            Principal.playMusic();
        }
    }//GEN-LAST:event_jButtonCorrerActionPerformed

    public void atacaInimigo(){
        if (invencivel<=0){
            Principal.person.hp -= inimigo.cp;
            if(Principal.person.hp < 0)
                Principal.person.hp=0;
            jLabel2.setText("HP: "+Controlador.Principal.person.hp);
            if(Principal.person.hp == 0){
                try {
                    Thread.sleep(1000);
                } catch (InterruptedException ex) {
                    Logger.getLogger(Battle.class.getName()).log(Level.SEVERE, null, ex);
                }
                acabou=true;
                fimBatalha(false);
            }
            else
                status(2);
        }
        else{
            status(2);
            invencivel-=1;
        }
    }
    
    public void fimBatalha(boolean ganhou){
        dispose();
        new Thread(){
            public void run(){
                if (ganhou==true){
                    try{
                        if (Principal.person.sprite.equals("venusiano"))
                            Principal.person.cp++;
                        
                        Principal.GUI.remove(dano);
                        Principal.GUI.remove(danoInimigo);
                        Principal.GUI.remove(text);
                        text = new Texto("", new Font("Calibri", Font.PLAIN , 60), Color.WHITE,210,270);
                        text.txt="Ganhou heheh";
                        //text.y=220;
                        text.cor = Color.WHITE;
                        Principal.GUI.add(text);
                        Thread.sleep(2600);
                        Principal.GUI.remove(sImg);
                        Principal.GUI.remove(text);
                        musica.player.close();
                        Principal.playMusic();
                        Principal.person.xp+=10;
                        if (Principal.person.xp>=100){
                            Principal.person.level++;
                            Principal.person.xp=0;
                            Principal.person.hp += Principal.person.hp * 0.2;
                            if (Principal.person.hp>Principal.person.getVidaMaxima())
                                Principal.person.hp = Principal.person.getVidaMaxima();
                            Principal.person.cp += Principal.person.cp * 0.2;
                            
                            if (Principal.person.level==124 && Principal.person.sprite.equals("motumbo")){
                                int _x = Principal.person.sImg.x;
                                int _y = Principal.person.sImg.y;
                                ArrayList<Consumiveis> _itens = Principal.person.itens;
                                Arma _arma = Principal.person.arma;
                                int _level = Principal.person.level;
                                int _xp = Principal.person.xp;
                            
                                Principal.f.removeKeyListener(Principal.person);
                                Principal.GUI.remove(Principal.person.sImg);
                                
                                Principal.person = new Elfo();
                                Principal.person.x = _x;
                                Principal.person.y = _y;
                                Principal.person.itens = _itens;
                                Principal.person.arma = _arma;
                                Principal.person.level= _level;
                                Principal.person.xp = _xp;
                                
                                Principal.person.drawSprite();
                                Principal.f.addKeyListener(Principal.person);
                                
                                
                            }
                        }
                        Principal.retoma();
                        
                    }
                    catch(Exception e){

                    }

                }
                else
                {
                    try {
                        Principal.GUI.remove(dano);
                        Principal.GUI.remove(danoInimigo);
                        Principal.GUI.remove(text);
                        text = new Texto("Perdeu kkkkk", new Font("Calibri", Font.PLAIN , 60), Color.WHITE,235,285);
                       
                        
                        Principal.GUI.add(text);
                        Thread.sleep(2600);
                        Principal.GUI.remove(text);
                        
                        text.txt="Sua morte está";
                        text.x= 220;
                        text.y= 250;
                        Texto text2 = new Texto("na mão do dado", new Font("Calibri", Font.PLAIN , 60), Color.WHITE,210,330);
                                                
                        
                        Principal.GUI.add(text);
                        Principal.GUI.add(text2);
                        Thread.sleep(5600);
                        Principal.GUI.remove(text);
                        Principal.GUI.remove(text2);
                        Dado dado = new Dado();
                        dado.animacao();
                        Principal.person.xp+=5;
                        if (Principal.person.xp>=100){
                            Principal.person.level++;
                            Principal.person.xp=0;
                            Principal.person.hp += Principal.person.hp * 0.2;
                            Principal.person.cp += Principal.person.cp * 0.2;
                        }
                        Principal.person.hp=1;
                        Principal.retoma();
                        Principal.GUI.remove(sImg);
                        musica.player.close();
                        Principal.playMusic();
                        //System.exit(0);
                    } catch (InterruptedException ex) {
                        Logger.getLogger(Battle.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }   
        }.start();
    }
    
    
    public void status(int modo){
        Principal.GUI.remove(text);
        switch(modo){
            case 0:{
                if (turno==true){
                    text.txt = "Aguardando seu ataque!";
                    text.x=249;
                    text.cor = Color.WHITE;
                    break;
                }
            }
            case 1:{
                switch(Principal.aleatorio.nextInt(4)){
                    case 0: text.txt = "Belo ataque"; break;
                    case 1: text.txt = "Bom ataque"; break;
                    case 2: text.txt = "Acertou ele"; break;
                    case 3: text.txt = "Foi na cara"; break;
                }
                text.cor = Color.WHITE;
                text.x=315;
                
                new Thread(){
                    public void run(){
                        double dano = Principal.person.cp;
                        if (Principal.person.arma!=null)
                            dano += Principal.person.arma.dano;
                
                        danoInimigo.txt = "-"+(int) dano;
                        
                
                        Principal.GUI.add(danoInimigo);
                        
                        for (float a=1; a>0.05; a-=0.05){
                            Color cor = new Color(1.0F,0.0F,0.0F,a);
                            try {
                                Thread.sleep(100);
                            } catch (InterruptedException ex) {
                                Logger.getLogger(Battle.class.getName()).log(Level.SEVERE, null, ex);
                            }
                            danoInimigo.cor = cor;
                            Principal.GUI.repaint();
                        }
                        Principal.GUI.remove(danoInimigo);
                    }
                }.start();
                break;
            }
            case 2:{
                if (acabou==false){
                    if (invencivel<=0){
                        switch(Principal.aleatorio.nextInt(4)){
                            case 0: text.txt = "Ti atacou"; text.x=320;  break;       
                            case 1: text.txt = "Eu não deixava"; text.x=307;break;
                            case 2: text.txt = "kkk toma essa"; text.x=316;break;
                            case 3: text.txt = "BIIRRLL kkkk"; text.x=320; break;
                        }
                    }
                    else{
                        text.txt="Tu ta invencível";
                        text.x=303;
                    }
                                 
                    text.cor = Color.RED;
                    
                    double d = inimigo.cp;
                             
                    if (invencivel<=0)
                        dano.txt = "-"+(int) d;
                    else
                        dano.txt= "-0";
                    new Thread(){
                         public void run(){

                             Principal.GUI.add(dano);

                             for (float a=1; a>0.05; a-=0.05){
                                 Color cor = new Color(1.0F,0.0F,0.0F,a);
                                 try {
                                     Thread.sleep(100);
                                 } catch (InterruptedException ex) {
                                     Logger.getLogger(Battle.class.getName()).log(Level.SEVERE, null, ex);
                                 }
                                 dano.cor = cor;
                                 Principal.GUI.repaint();
                             }
                             Principal.GUI.remove(dano);
                         }
                     }.start();
                }
               break;
            }
            case 3:{
                text.txt = "Aguardando inimigo!";
                text.x=255;
                text.cor = Color.WHITE;
                break;
            }
            case 4:{
                text.txt = "Usou item!";
                text.x=320;
                text.cor = Color.WHITE;
                break;
                
            }
        }
        new Thread(){
                public void run(){
                    if (modo!=0 && modo!=3 && modo!=4 && acabou==false){
                        for(int a =0 ; a<5; a++){
                            if (acabou==false){
                                Principal.GUI.add(text);
                                try {
                                    Thread.sleep(350);
                                } catch (InterruptedException ex) {
                                    Logger.getLogger(Battle.class.getName()).log(Level.SEVERE, null, ex);
                                }
                                Principal.GUI.remove(text);
                                try {
                                    Thread.sleep(400);
                                } catch (InterruptedException ex) {
                                    Logger.getLogger(Battle.class.getName()).log(Level.SEVERE, null, ex);
                                }
                            }

                        }
                    }
                    else
                        Principal.GUI.add(text);
                    try {
                            Thread.sleep(300);
                        } catch (InterruptedException ex) {
                            Logger.getLogger(Battle.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    if (modo==2 && acabou==false){
                            turno = true;
                            text.txt = "Aguardando seu ataque!";
                            text.x=249;
                            text.cor = Color.WHITE;
                            Principal.GUI.add(text);
                    }
                }
            }.start();          
    }
    
    public void atualizar(){
        jLabel9.setText(Integer.toString(crono.minutos)+":"+Integer.toString(crono.segundos));
    }
    public void pegouItem(){
        new Thread(){
            public void run(){
                turno = false;
                status(4);
                try {
                    Thread.sleep(2500);
                } catch (InterruptedException ex) {
                    Logger.getLogger(Battle.class.getName()).log(Level.SEVERE, null, ex);
                }
                status(3);
                int t = Principal.aleatorio.nextInt(600);
                try {
                    Thread.sleep(1300+t);
                } catch (InterruptedException ex) {
                    Logger.getLogger(Battle.class.getName()).log(Level.SEVERE, null, ex);
                }
                atacaInimigo();
            }
        }.start();

    }
    
   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAtacar;
    private javax.swing.JButton jButtonCorrer;
    private javax.swing.JButton jButtonItem;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    public javax.swing.JLabel jLabel2;
    public javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    // End of variables declaration//GEN-END:variables
}
